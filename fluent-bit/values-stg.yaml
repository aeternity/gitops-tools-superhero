encValues:
  OS_MASTER_PASSWORD: "AgByAmT+NDyCgNlMnfo3J27zqAwH35AQ9ORC6znv+4fx61IIDHzKguAk6jhVFGgWkG/DqkSEck/c12WoDEIdYJT1MoyrYwvj0LOitsDu/UECX+AcnqWojQgpLU/othR2e981Ro9LKvl6SpttXaaoRGikYRxY4X0p3dVUioYI7pgmguKLIEDdFxOT54yd0RBt2vh3Qb5IK6oQVIJJ5shqhDYdeFC7meO8s950tVlwpWT3yilCJhYQsSmamWTvrpr5LAc7+JR+esHXCmI2hQV7KOeTRQAZ9+gjrEcZWLMXsaYYSHq6q75a1z07JpLg6RoTeSRXwBRYb1q45dgT2NktvqOa1fOhbY2DVbAfKTnHiHxI32RuX8zHNage4yB9DRag/ZDwW5CoBWGIYJBiHP04EMEba+MohIfwJj+x4XHHXrauWHrdzvDSDJlJijxKKJFSGFbJ/lhEMlxFxYmoTxKAgCl6+2e8ugf5hgjRDGqK2Fr/hP26umr8YD1rtRqHwNvGCCtQ1nnxgXoQBM98RAqSL4cu6PNazicx19J98uIVSWlJsJMcmki0dOWhY+mbjVTlRZEk34+hqjqJuIkSu+YWCyb6W+/q1LbcFm72+18Tm08H9msZrGa0vWcJjPGJmRzdWDGh2yrEM7H3iAYnlojvgaM75zXGylvBTtjvAC+RU2seyYovwDklcmkUeHFzoCzF4ldvxeMO"
  AWS_ACCESS_KEY_ID: "AgCMlYUXPk8ztr36e7j9dwDIaq/98CRkcdp6uKUQB46vK2Csd3KTss6mW/wdKKL84xEo97auHMDMVk8MBqbXK1oxPuS3tc3HY5cbfcDkc2klhql9RWjXfDTi5DIIuFviJF3nFasutGSb+6+SdVKCe2syZ8Q9Jf9Q1cbdZyOctJwRzFaqi+WZW2Pv+HuC3rDdCFKYfXF2lXyYXzhwdoqVGwiX9UIPG2jRKGOCW9HI2b+TfJ1lEz4013pBMDxmlWCMIiAtP86PFP2U85jonJyP+dkZRmzcqHLd2R+3oFO7Rio1WBHKgrR8w3b/B7ML7j9mOctss21j8gbrwZRybkK/iaTAWnkC+P/c5lrpSn19SyrB/tnOhnmegRdVKvJOe11iMNpgJ5cIkVPIFnmcftaPgTtKW7Sohrkgr8Y1KzKppWIXNZ7pmxV41LJ2dmsEK0f4n2Z9j9SJt5jGMl2Z4w3E1E1mTGas10bAuqvXO3RVSu3mIUrL3itwESrXEHQu68Iy5a6uZgXWlXna547RVfkbOmsOxmWVYY5xbBsz3BIB5bk1esLBHUSVwMIEjTbUH4qs6h0PCm4+1bu86VXbLGUyvRtlIWrKfrIj0cqeyUOB93GX4kSvyygrzokYpfi6ndtmodchmZYeIJqO1zT9s5Ifq+hPnCKfYHKjlNbq8ODJwMYols3M29APF8ZQoGhJOXcPJPhAXDJsR2o9SKVp+oPM+BDWTIx/ew=="
  AWS_SECRET_ACCESS_KEY: "AgAqyaWSr9Z2gP9ghTIdwAmSXQ9ksCIEm/nAKe675q5ZuZWVzasKtwAGIzpknprGJiw2flIERIUaMoWZJ5rhxy7Mu6UEuJJ+rl3tZ4cdtohQzIv7qzoZgbOy20QUX6LMWcS2TbdxnE6pvBnGnowl/AiK6gwJDvK3J11gwOggxOcxGa4gaioxjswijEqFZpXn1dYDu0FldcUxCP0Pg6Auaa+bCRWIgfM/1VsfxQw0bX/IRQLNfUzm2j2M0nzjFDo27XSANyvGyr+Jsm5LORibI2ZLuwzUptkc1K8nfJOd2A76QmVZ2B5gYnaGIZHSPV0qGdhS49Chy9OnL3w+NgtzIO9gq4hTN+Yb5j7lToQzf1PEZtj54JFP8cFV7VhCueNo2zXpjxFGpIqpW9jZD6xz6e5MhyGwPzdWWJ/fBcvPcP6MGlgW5dWFLOwweNE1sjSFYR+3a2KtqR1DSH5uPY1RaIBwS0a/Swircq15N7A00w6j2qQ7lil8JONBJGESJi/3DWJ4lfvo4qbBzsxE0PpY3V/J0pR6ZLDb7QRKi5EliIZBjYWhMq3GZ5vdKxqdGvQdmbYKJf1ruhhuxYDblqnpMk3P+SJg7Ud7JmBPm5ilLkYVrczYuQq4WVjBPVBRJV9BQP2OlOLK7xUF1yOTcn1uRjUWikEzc6jF6iu1gYKZQLv9Q6W0chkGlEsCNRy6WH+gi1MovqzbCDP8+oMDG3kMx4/UhG5uwgu67w/o8Cw5QqycOXLD+ARyT9HO"

fluent-bit:
  # Default values for fluent-bit.
  
  # kind -- DaemonSet or Deployment
  kind: DaemonSet
  
  # replicaCount -- Only applicable if kind=Deployment
  replicaCount: 1
  
  image:
    repository: fluent/fluent-bit
    # Overrides the image tag whose default is {{ .Chart.AppVersion }}
    tag: "1.8.7"
    pullPolicy: Always
  
  testFramework:
    image:
      repository: busybox
      pullPolicy: Always
      tag: latest
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  serviceAccount:
    create: true
    annotations: {}
    name:
  
  rbac:
    create: true
    nodeAccess: false
  
  podSecurityPolicy:
    create: false
    annotations: {}
  
  podSecurityContext: {}
  #   fsGroup: 2000
  
  hostNetwork: false
  dnsPolicy: ClusterFirst
  
  dnsConfig: {}
  #   nameservers:
  #     - 1.2.3.4
  #   searches:
  #     - ns1.svc.cluster-domain.example
  #     - my.dns.search.suffix
  #   options:
  #     - name: ndots
  #       value: "2"
  #     - name: edns0
  
  hostAliases: []
  #   - ip: "1.2.3.4"
  #     hostnames:
  #     - "foo.local"
  #     - "bar.local"
  
  securityContext: {}
  #   capabilities:
  #     drop:
  #     - ALL
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000
  
  service:
    type: ClusterIP
    port: 2020
    labels: {}
    # nodePort: 30020
    annotations: {}
  #   prometheus.io/path: "/api/v1/metrics/prometheus"
  #   prometheus.io/port: "2020"
  #   prometheus.io/scrape: "true"
  
  serviceMonitor:
    enabled: false
  #   namespace: monitoring
  #   interval: 10s
  #   scrapeTimeout: 10s
  #   jobLabel: fluentbit
  #   selector:
  #    prometheus: my-prometheus
  #  ## metric relabel configs to apply to samples before ingestion.
  #  ##
  #  metricRelabelings:
  #    - sourceLabels: [__meta_kubernetes_service_label_cluster]
  #      targetLabel: cluster
  #      regex: (.*)
  #      replacement: ${1}
  #      action: replace
  #  ## relabel configs to apply to samples after ingestion.
  #  ##
  #  relabelings:
  #    - sourceLabels: [__meta_kubernetes_pod_node_name]
  #      separator: ;
  #      regex: ^(.*)$
  #      targetLabel: nodename
  #      replacement: $1
  #      action: replace
  
  prometheusRule:
    enabled: false
  #   namespace: ""
  #   additionalLabels: {}
  #   rules:
  #   - alert: NoOutputBytesProcessed
  #     expr: rate(fluentbit_output_proc_bytes_total[5m]) == 0
  #     annotations:
  #       message: |
  #         Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
  #         bytes for at least 15 minutes.
  #       summary: No Output Bytes Processed
  #     for: 15m
  #     labels:
  #       severity: critical
  
  dashboards:
    enabled: false
    labelKey: grafana_dashboard
    annotations: {}
    namespace: ""
  
  lifecycle: {}
    # preStop:
    #   exec:
    #     command: ["/bin/sh", "-c", "sleep 20"]
  
  livenessProbe:
    httpGet:
      path: /
      port: http
  
  readinessProbe:
    httpGet:
      path: /api/v1/health
      port: http
  
  resources: {}
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi
  
  ## only available if kind is Deployment
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts: []
    # - host: fluent-bit.example.tld
    extraHosts: []
    # - host: fluent-bit-extra.example.tld
        ## specify extraPort number
    #   port: 5170
    tls: []
    #  - secretName: fluent-bit-example-tld
    #    hosts:
    #      - fluent-bit.example.tld
  
  ## only available if kind is Deployment
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  #  targetMemoryUtilizationPercentage: 75
    ## see https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#autoscaling-on-multiple-metrics-and-custom-metrics
    customRules: []
  #     - type: Pods
  #       pods:
  #         metric:
  #           name: packets-per-second
  #         target:
  #           type: AverageValue
  #           averageValue: 1k
      ## see https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-configurable-scaling-behavior
    behavior: {}
  #      scaleDown:
  #        policies:
  #          - type: Pods
  #            value: 4
  #            periodSeconds: 60
  #          - type: Percent
  #            value: 10
  #            periodSeconds: 60
  
  ## only available if kind is Deployment
  podDisruptionBudget:
    enabled: false
    annotations: {}
    maxUnavailable: "30%"
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}
  
  labels: {}
  
  annotations: {}
  
  podAnnotations: {}
  
  podLabels: {}
  
  priorityClassName: ""
  
  env: []
  #  - name: FOO
  #    value: "bar"
  
  # The envWithTpl array below has the same usage as "env", but is using the tpl function to support templatable string.
  # This can be useful when you want to pass dynamic values to the Chart using the helm argument "--set <variable>=<value>"
  # https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
  envWithTpl: []
  #  - name: FOO_2
  #    value: "{{ .Values.foo2 }}"
  #
  # foo2: bar2
  
  envFrom:
    - secretRef:  
        name: fluent-bit-secret
  
  extraContainers: []
  #   - name: do-something
  #     image: busybox
  #     command: ['do', 'something']
  
  metricsPort: 2020
  
  extraPorts: []
  #   - port: 5170
  #     containerPort: 5170
  #     protocol: TCP
  #     name: tcp
  #     nodePort: 30517
  
  extraVolumes: []
  
  extraVolumeMounts: []
  
  updateStrategy: {}
  #   type: RollingUpdate
  #   rollingUpdate:
  #     maxUnavailable: 1
  
  # Make use of a pre-defined configmap instead of the one templated here
  existingConfigMap: ""
  
  networkPolicy:
    enabled: false
  #   ingress:
  #     from: []
  
  luaScripts: {}
  
  ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/configuration-file
  config:
    #secrets:
      #OS_MASTER_PASSWORD: OS_MASTER_PASSWORD
    service: |
      [SERVICE]
          Daemon Off
          Flush 1
          Log_Level {{ .Values.logLevel }}
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port {{ .Values.metricsPort }}
          storage.path              /var/log/ds/flb-storage/
          storage.sync              normal
          storage.checksum          off
          storage.backlog.mem_limit 100M
          
  
    ## https://docs.fluentbit.io/manual/pipeline/inputs
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          Tag kube.*
          DB /var/log/ds/flb_kube.db
          DB.Sync            Normal
          Mem_Buf_Limit      50MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          Buffer_Chunk_Size  2MB
          Buffer_Max_Size    4MB
          Exclude_Path /var/log/containers/dex*.log,/var/log/containers/mdw-frontend*.log,/var/log/containers/superhero*.log
      [INPUT]
          Name tail
          Path /var/log/containers/dex-ui*.log,/var/log/containers/mdw-frontend*.log,/var/log/containers/superhero*.log
          Tag nginx.*
          DB /var/log/ds/flb_kube_nginx.db
          DB.Sync            Normal
          Mem_Buf_Limit      50MB
          Skip_Long_Lines    Off
          Refresh_Interval   10
          Buffer_Chunk_Size  2MB
          Buffer_Max_Size    4MB
    ## https://docs.fluentbit.io/manual/pipeline/filters
    filters: |
      [FILTER]
          Name kubernetes
          Match *
          Merge_Log On
          Keep_Log Off
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
      [FILTER]
          Name         grep
          Match        *
          Exclude      log .*kube-probe
      [FILTER]
          Name        parser
          Match       nginx.*
          Key_Name    log
          Parser      nginx
          Preserve_Key  True
          Reserve_Data  True
      [FILTER]
          Name modify
          Match nginx.*
          Remove stream
          Rename method app_method
          Rename path app_path
          Rename remote app_remote
          Rename size app_size
          Rename host app_host
          Rename user app_user
          Rename code app_code
          Rename referer app_referer
      [FILTER]
          Name nest
          Match nginx.*
          Operation nest
          Wildcard app_*
          Nest_under app
          Remove_prefix app_
  
    ## https://docs.fluentbit.io/manual/pipeline/outputs
    outputs: |
      [OUTPUT]
          Name            es
          Match           *
          Host            opensearch-stg.aepps.com
          Port            443
          AWS_Auth        On
          HTTP_User       es-admin
          HTTP_Passwd     ${OS_MASTER_PASSWORD}
          AWS_Region      eu-central-1
          tls             Off
          Replace_Dots    On
          Generate_ID     On
          Index fluentbitHetzner
          Trace_Error On
          Trace_Output On
          
    ## https://docs.fluentbit.io/manual/pipeline/parsers
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
      [PARSER]
          Name   apache_error
          Format regex
          Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$  
      [PARSER]
          Name   nginx
          Format regex
          Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z  
      [PARSER]
          Name   json
          Format json
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z  
      [PARSER]
          Name        docker
          Format      json
          Time_Key    time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep   On  
      [PARSER]
          Name        syslog
          Format      regex
          Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
          Time_Key    time
          Time_Format %b %d %H:%M:%S
  
    # This allows adding more files with arbitary filenames to /fluent-bit/etc by providing key/value pairs.
    # The key becomes the filename, the value becomes the file content.
    extraFiles: {}
  #     example.conf: |
  #       [OUTPUT]
  #           Name example
  #           Match foo.*
  #           Host bar
  
  # The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
  volumeMounts:
    - name: config
      mountPath: /fluent-bit/etc/fluent-bit.conf
      subPath: fluent-bit.conf
    - name: config
      mountPath: /fluent-bit/etc/custom_parsers.conf
      subPath: custom_parsers.conf
  
  daemonSetVolumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: etcmachineid
      hostPath:
        path: /etc/machine-id
        type: File
  
  daemonSetVolumeMounts:
    - name: varlog
      mountPath: /var/log
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: etcmachineid
      mountPath: /etc/machine-id
      readOnly: true
  
  args: []
  
  command: []
  
  # This supports either a structured array or a templatable string
  initContainers: []
  
  # Array mode
  # initContainers:
  #   - name: do-something
  #     image: bitnami/kubectl:1.22
  #     command: ['kubectl', 'version']
  
  # String mode
  # initContainers: |-
  #   - name: do-something
  #     image: bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}
  #     command: ['kubectl', 'version']
  
  logLevel: debug
