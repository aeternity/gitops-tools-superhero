encValues:
  github_client_id: 'AgB6c49xdNVRfvc+eDbfePcjiOcJ2AQTrIqJlymzi+L4VwyGDpIkpw1E9LIMjAH/uAT5SbSpp7FWXIPH+GG1AwSfdxMRBzBdu46TXEvkhwg+t949rMrKqn+sD20RrJJcOpfRSz7fUYqHY0oZuHNT+jdLM5hjj8bVWk8oFcQWkdt9iR97EktZyQbqRkXX1xStuvMRd65w2augN5lcUnfmVpioOiNeZSznJ9mlBtafeO8i/NEPrRN3tCTLLyjAMoejaoJm+wwOnYIxkkkVi4z4EM1YkZ/4fOKJxPTCCjsG+A+oG4/y0uiJYVEc2g0t0HgUDxIvujad4sQG+D1TJxpQp0u2avQYaoBPmB5k3hsz86vN4K+CJZt5M8gD2mLtgspgyytrCNeaVd5Ep2S/4XFzXyY8rbClqpKA8wiEyI2F2TtO9jQRFjS/b7mC0d3lQhw4v1N2LLSP3WuPFQQ3gqE69WjpOQcUZqx1k1YYMHmj5MAWPdSlMmVA+zQ0wXSwdVRFofn7DASrHmyjKXCCz4ZPtiQgdC7nFL5y0qiH4HwWoYcC/GKRVpogPscIAk/WIf4BWmbGLic9EO3Y7RYho6QQTMs7XZdQaA1XqAZhGADewjlXrm/ng0a41WTlwI6+RpkEfWfqtewW1bFmfVCRh8F2Jt8Lermbyu3DkpoyDKlz57GPCdrcjO/IK4PrZazBCJuzK4j6V117Yh/MxfosBR8KbaC3J3+4kg=='
  github_client_secret: 'AgCUZCi9BeI3imLzTqP7+0VVxGO4+6RPuKtloSq/WI4rhpnKYCbyh737gES0K9KpkKuh15+PdaYhg+ZysQSiahssWlI+bBZkxDJZhtRH6AAyqkFz+Em5z3mvKnM1Sdl4+BGfer7rAd1FcncUPjr9V/cxCEOEwDvhT//Woth/VQ8PONv6z/u53pT4zZG85vny73H3t+sorAgw3flH1XQSv65l9Ll3hLIFV6TUAuyyLYfbXZVLXbdvvAkoovF2p1K2rl8lQUug8neLua1XvUnTR/M6QITP1+npvSkcvY7PK/Ji9SXkCKxzwJPvSHRqR1tA0uf3KgtKrxM4SWwjuk5fAU9LxxkKFUGClFosS+UDyxxNPynqeG5hEKMp9u8NszDRB0A4n45ivIRJX8hiedGcOdDgbd7LctxN6FUsbzSblya/i0j0d9SnKK0BPpWApxuy2OavSGQmmof2mvu7ueU5E+A3tCH9rE0hwejI85N7ngH5SGfrWcetUNC5DhBK1mkSl2a7ObhVhfAA8ysF6eKbmPv1w46k0Uce0/lMNSKbqO8ARaeWwgt8MfxMJPaBO/TcOS7KfM8aNBed/QeoHbFd67GCHgWmPAYOZSgbc2TmvtF/glUme7J5ZMbXIE7ery1f9x8PPYIj7K3qEOHpwLeQ9Adak4Exa0OAoXEToJqyuI8QFeWuC+zsWadSOkVdUw9pxqkTb9/mIqy/JUJTRvxGFp++LdIf67tHoClp8muvmcTXAJQdGvHZK8dh'
  grafana_admin_user: 'AgAQAfu4txdOS3bExwsBisgqFoj0ZfcIwFC/0JFS1LIKkxUtX7wRg8JdDwF5+JfRQg0iISDnOAcsLB64UtlUXZZYH+fHe9rACnO18t5GFcEm5+kXshC1UFaDWdgCCR0SKexs870PmI5PXoxoKVqksVVp5c05YrDsJlnMXg2ZGtPSgYYjJzSDCoDhc5IzvF18//xzRB5+S1sM3TaA4f2r17VEsTTabCRlar1yLK39fG5nOvl+NAEQS0HC1w8dk3knJc2JwLvrNJEvVG8+ub2ZAVRerfg1T8SaYCv9OSdC0dc7o0Pu5lzIuz/6pcSyBrrhWmBitrbGEjwvUBfeR+c0yCU5kER/Ka4NbEzl+RdGxgepJoHX8ennYnxeJMigwf19XevP9KxRMN24fVY9uzcgvl5j4y+5q2we42KjxJynKg6cuMYHNi8qWA3O2tLNKkA8afQiriSpjFLN5mKsj+y4MfNUyz8d+sKE9zUPx/Dhd+YlqYFtD1OAwDvrW4MNj4NdE9/ERiiQTTGGqj1Kb7UjDkV0y6RRM0/8AuR4MhX6AYSLNOoUi1suPqajWl0Mmo/9dVt6xnU0b/59NwvpeebnHjewQ3/4aoSo38X0f/yoOwL7kQfePLOnAlYybdTwc9GBboZK1fq2b9L4vpE5HS0qdG7Qf0hgw80BfprmQRyOYE36jl+hoSwX7XdpEGWUksH8IMjMKe7/9A=='
  grafana_admin_password: 'AgCPwIANjYSeogSMn0D3Nlv4777u+6wcmRwjrZ9rMFVoGK/4anMOydJ7lSe4BQagCjXbtvnn0t67DlmFpxk6QLUCqSM73jw0OabyUGyDKtdpzn7SCcWUVJkJlQCH+pra1/cAw5gvjZbKqnPqdj0g7ErgVzIRgasjGxKG1jCnq8u0NVjf9KMuJtu1PN4oWSXYsujuSdgebrQNaRvKxJZNfKIrTznp3HeuKNA46ahwx9KqtgczuGprl31uhKydItD2R/Dhse/Ls+4td7tW60Egz9l/l23ZOhNKaxHXBi5lWkeMaS9AicrjduEqG8bZSuVEsiDVEtyqahonG2V7rr+oVy5qymvoCbTSgMzwQqgQ04AtLUZbUfcgNe2GoarYCwYz9MDIXIgyYA6y5FOBndvnccBGSiZukcm1JCZ7AuLMMwJE1i8T9UpePIBn9NMKAukEs+VPdqNpP/i6niKPYXMZkfo72JXWGvHj9+nOpO4/GOjueyLty+vdvYEVTrCEuZ5K9VeYPP38esxHcxNdRAN6CppM7aFF49aK3+VV5NQRdymtDFlsLDLB0yRSl2hqaB723t07LMG37pDp0hMDjYbHbq0uxqBrYmfDY7YOyDa63tUanBxMe1/3Mi7FSdYEE27kKrLindFtm3zZ+FjbIdFPpcd8sWM+TK+0EWQhz0iXoYcrvhQkNnVfxeCJXYdTKV5USflT7AGmGc9oWWk48Z5Hwi47'

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: redis_exporter
          static_configs:
            - targets: ['10.0.1.13:9121', '10.0.1.11:9121']
        - job_name: node
          static_configs:
            - targets: ['10.0.1.13:9100', '10.0.1.11:9100']
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "prometheus.dev.superk8s.de"
      pathType: ImplementationSpecific

  grafana:
    admin:
      existingSecret: kube-prometheus-stack-secret
      userKey: grafana_admin_user
      passwordKey: grafana_admin_password
    sidecar:
      dashboards:
        enabled: true
        folderAnnotation: grafana-dashboard-dir
    grafana.ini:
      server:
        domain: grafana.dev.superk8s.de
        root_url: https://grafana.dev.superk8s.de
      plugins:
        enable_alpha: true
      auth.github:
        enabled: true
        client_id: $__file{/etc/secrets/github_client_id}
        client_secret: $__file{/etc/secrets/github_client_secret}
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allow_sign_up: true
        allowed_organizations: aeternity
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "grafana.dev.superk8s.de"
      pathType: ImplementationSpecific
    plugins:
      - grafana-piechart-panel
    dashboardProviders:
     dashboardproviders.yaml:
       apiVersion: 1
       providers:
       - name: 'tools'
         orgId: 1
         folder: 'Tools'
         type: file
         disableDeletion: true
         editable: true
         options:
           path: /var/lib/grafana/dashboards/tools
    dashboards:
      tools:
        traefik2:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        argocd:
          gnetId: 14584
          revision: 1
          datasource: Prometheus
    extraSecretMounts:
    - name: secrets-mount
      secretName: kube-prometheus-stack-secret
      defaultMode: 0440
      mountPath: /etc/secrets
      readOnly: true

  alertmanager:
    alertmanagerSpec:
      externalUrl: "https://alertmanager.dev.superk8s.de"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "alertmanager.dev.superk8s.de"
      pathType: ImplementationSpecific
    config:
      templates:
        - '/etc/alertmanager/config/*.tmpl'
    templateFiles:
      slack.tmpl: |-
           {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}        
           {{ define "slack.ae.text" }}
           {{- $root := . -}}
           {{ range .Alerts }}
             *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
             *Cluster:* {{ template "cluster" $root }}
             *Description:* {{ .Annotations.description }}
             *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
             *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
             *Details:*
               {{ range .Labels.SortedPairs }} - *{{ .Name }}:* `{{ .Value }}`
               {{ end }}
           {{ end }}
           {{ end }}
           {{ define "slack.ae.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ .CommonLabels.alertname }}
            {{- end }}
  defaultRules:
    rules:
      kubeScheduler: false

  additionalPrometheusRulesMap:
  - name: blackbox
    groups:
    - name: blackbox
      rules:
        - alert: BlackboxProbeHttpFailure
          expr: probe_http_status_code <= 199 OR probe_http_status_code >= 400
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Probe failed (URL: {{ $labels.instance }})"
            description: "Probe failed\n STATUS_CODE = {{ $value }})"
        - alert: BlackboxProbeBackend
          expr: probe_failed_due_to_regex{target="superhero-backend"} > 0
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Probe failed (URL: {{ $labels.instance }})"
            description: "Please check status on the following link: https://superhero-backend.dev.aepps.com/health/backend"
    - name: elasticsearch
      rules:
        - record: elasticsearch_filesystem_data_used_percent
          expr: 100 * (elasticsearch_filesystem_data_size_bytes - elasticsearch_filesystem_data_free_bytes)
            / elasticsearch_filesystem_data_size_bytes
        - record: elasticsearch_filesystem_data_free_percent
          expr: 100 - elasticsearch_filesystem_data_used_percent
        - alert: OpensearchTooFewNodesRunning
          expr: elasticsearch_cluster_health_number_of_nodes < 1
          for: 5m
          labels:
            severity: critical
          annotations:
            description: There are only {{$value}} < 3 Opensearch nodes running
            summary: Opensearch running on less than 3 nodes
        - alert: OpensearchHeapTooHigh
          expr: elasticsearch_jvm_memory_used_bytes{area="heap"} / elasticsearch_jvm_memory_max_bytes{area="heap"}
            > 0.9
          for: 15m
          labels:
            severity: critical
          annotations:
            description: The heap usage is over 90% for 15m
            summary: Opensearch node {{$labels.node}} heap usage is high
        - alert: OpensearchClusterStatus
          expr: elasticsearch_cluster_health_status{color="red"}==1
          for: 5m
          labels:
            severity: critical
          annotations:
            description: Cluster Status is Red!
            summary: Opensearch Cluster Status is Red!
                    
    - name: pods
      rules:
        - alert: ContainerCpuUsage
          expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) BY (instance, name) * 100) > 80
          for: 5m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Container CPU usage"
            description: "Container CPU usage is above 80%\n VALUE = {{ $value }}"
        - alert: RedisDown
          expr: redis_up == 0
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: Redis down (instance {{ $labels.instance }})
            description: "Redis instance is down"
        - alert: HostHighCpuLoad
          expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
          for: 0m
          labels:
            severity: warning
            namespace: monitoring
            env: dev
          annotations:
            summary: Host high CPU load (instance {{ $labels.instance }})
            description: "CPU load is > 80%\n  VALUE = {{ $value }}"
        - alert: HostOutOfMemory
          expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Host out of memory (instance {{ $labels.instance }})
            description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}"
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }}
              in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }}
              free.
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet"}
            ) < 0.03
            and
            kubelet_volume_stats_used_bytes{job="kubelet"} > 0
            unless on(namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1m
          labels:
            severity: critical
        - alert: KubePodCrashLooping
          annotations:
            description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
              }}) is in waiting state (reason: "CrashLoopBackOff").'
            summary: Pod is crash looping.
          expr: |
            max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="kube-state-metrics"}[5m]) >= 1
          for: 15m
          labels:
            severity: warning
        - alert: KubePodNotReady
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state for longer than 15 minutes.
            summary: Pod has been in a non-ready state for more than 15 minutes.
          expr: |
            sum by (namespace, pod) (
              max by(namespace, pod) (
                kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown"}
              ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
                1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
              )
            ) > 0
          for: 15m
          labels:
            severity: warning
